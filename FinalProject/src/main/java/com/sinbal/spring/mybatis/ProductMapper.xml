<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">
	<insert id="addProduct" parameterType="productDto">
		INSERT INTO sbproduct
		(num, kind, productname, content, price, regdate,profile)
		VALUES(sbproduct_seq.NEXTVAL, #{kind }, #{productname },  #{content }, #{price }, SYSDATE,#{profile})
	</insert>
	
	<select id="getList" resultType="productDto">
		select num,productname,kind,content,price,regdate,profile,profile2
		from sbproduct 
		order by num desc
	</select>
	
	<insert id="insert_sub" parameterType="productDto">
		insert into sbproduct_sub(num, sbsize, sbcount) values(#{num},#{sbsize},#{sbcount})
	</insert>
	<select id="getnum" resultType="int">
		 SELECT sbproduct_seq.currval as num FROM DUAL
	</select>
	
	<!-- 상품 정보를 가져오는 sql문 -->
	<select id="getData2" parameterType="int" resultType="ProductDto">
		select num,productname,kind,content,price,regdate,profile,profile2
		from sbproduct
		where num=#{num}
	</select>
	<!-- 상품 정보(신발 사이즈, 수량)를 가져오는 sql문 -->
	<select id="getSubData" parameterType="int" resultType="ProductDto">
		SELECT detailSelect.*, ROWNUM rnum
			FROM
			(select num,productname,kind,content,price,regdate,profile,profile2,sbsize,sbcount
			from sbproduct
			inner join sbproduct_sub using(num)
			where num=#{num}
			order by sbsize ASC) detailSelect
	</select>
	<!-- 선택할 수 있는 신발 사이즈 항목의 개수를 가져오는 sql문 -->
	<select id="getSizeData" parameterType="int" resultType="int">
		select MAX(rnum)
			from
			(SELECT detailSelect.*, ROWNUM rnum
				FROM
				(select num,productname,kind,content,price,regdate,profile,profile2,sbsize,sbcount
				from sbproduct
				inner join sbproduct_sub using(num)
				where num=#{num}) detailSelect)
	</select>
	<!-- 특정 사이즈의 재고 개수를 리턴하는 sql문 -->
	<select id="getStockData" parameterType="Map" resultType="productDto">
		select detailSelect.*, ROWNUM rnum
			from
			(select num,productname,kind,content,price,regdate,profile,profile2,sbsize,sbcount
				from sbproduct
				inner join sbproduct_sub using(num)
				where num=#{num}
				order by sbsize ASC) detailSelect
		where sbsize=#{size}
	</select>
	
	<select id="isExist" parameterType="java.lang.String" 
		resultType="string"> <!-- java.long.String or string 아무거나 써도 인식한다. -->
		SELECT productname
		FROM sbproduct
		WHERE productname=#{inputproductname}
	</select>
	<delete id="productdelete" parameterType="int">
		delete from sbproduct
		where num=#{num}
	</delete>
	
	<select id="getData" parameterType="int" resultType="productDto">
		SELECT sbproduct.num,kind,price, productname, content, regdate, profile,
		 sbcount, sbsize
		FROM sbproduct, sbproduct_sub
		WHERE sbproduct.num = sbproduct_sub.num and sbproduct.num=#{num}
		ORDER BY sbsize asc
	</select>
	
	<update id="update" parameterType="productDto">
		UPDATE sbproduct SET kind=#{kind},price=#{price}, profile=#{profile}, content=#{content}
		WHERE num=#{num}
	</update>
	<update id="updatesub" parameterType="productDto">
		UPDATE sbproduct_sub SET
		sbcount=#{sbcount}
		WHERE num=#{num} and sbsize=#{sbsize}
	</update>
</mapper>